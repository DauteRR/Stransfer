{"version":3,"sources":["pages/Home/img/undraw_making_art_759c.svg","pages/Home/img/undraw_image_upload_wqh3.svg","pages/Home/img/undraw_safe_bnk7.svg","pages/Home/img/carlos.png","pages/Home/img/daute.png","components/Navigation/index.tsx","utils/mediaUtils.tsx","utils/dimensions.tsx","components/Camera/index.tsx","components/DownloadableImage/index.tsx","components/DownloadableImageList.tsx","utils/indexedDatabase.tsx","utils/StyleInfos.ts","components/App/index.tsx","serviceWorker.ts","index.tsx","pages/Home/index.tsx","pages/Application/index.tsx"],"names":["module","exports","__webpack_require__","p","components_Navigation","react_default","a","createElement","className","lib","to","type","id","hidden","aria-hidden","htmlFor","href","target","rel","canvasBuffer","document","mediaToBlob","media","_ref","width","height","context","getContext","drawImage","Promise","res","rej","toBlob","blob","reject","loadStreamToMedia","stream","srcObject","_","src","URL","createObjectURL","addEventListener","once","getAspectRatio","HTMLVideoElement","videoWidth","videoHeight","MAX_DIMENSIONS","getMaxDimensionsRespectingAspectRatio","aspectRatio","result","Object","objectSpread","Camera","state","isRecording","errorMessage","_videoRef","_setVideoRef","videoElement","_this","_loadStream","_callee","regenerator_default","wrap","_context","prev","next","MediaUtils","setState","stop","this","_takePhoto","_callee2","video","_context2","abrupt","props","onNewPhoto","_this2","navigator","mediaDevices","getUserMedia","audio","then","catch","toConsumableArray","getTracks","forEach","track","displayDimensions","ref","autoPlay","role","aria-label","style","maxWidth","concat","maxHeight","onClick","title","Component","DownloadableImage","canvasRef","React","createRef","imageRef","isImageLoaded","onImageLoad","getCanvasElement","getImageElement","image","current","Error","canvas","download","imageName","dataUrl","deleteImage","date","getDownloadButton","alt","onLoad","DownloadableImageList","createPhotoListItem","index","key","components_DownloadableImage","String","display","justifyContent","alignItems","flexWrap","imageData","map","IMAGE_DATA_OBJECT_STORE_NAME","idbPromise","idb","open","upgradeIdb","createObjectStore","keyPath","saveImageData","data","db","transaction","objectStore","put","styleInfos","name","pathToModel","pathToImage","App","styleTransfer","selectedStyle","loadingStyle","_deleteImage","delete","IdbUtils","filter","_ref2","_onNewPhoto","cameraAspectRatio","dimensions","img","HTMLImageElement","_loadImage","transfer","sent","complete","bind","assertThisInitialized","_onImageInputted","_ref4","files","length","imgBlob","Image","imgUrl","onload","asyncToGenerator","mark","revokeObjectURL","value","_onStyleSelection","_callee3","_context3","ml5","getAll","imageDataList","Date","now","newImageData","prevState","_this3","_ref7","disabled","components_Camera","accept","multiple","onChange","components_DownloadableImageList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","Router","BrowserRouter","basename","process","Switch","Route","exact","path","component","react","MakingArtImg","UploadingImg","SafeImg","DauteImg","CarlosImg","Link","backgroundColor","boxShadow","components_App","ReactDOM","render","getElementById","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a81fafa8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_making_art_759c.7a6edf59.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_image_upload_wqh3.771e1a7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_safe_bnk7.c0bcd0b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/carlos.f756d44b.png\";","module.exports = __webpack_public_path__ + \"static/media/daute.eb1ecf91.png\";","import React from \"react\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport \"./Navigation.scss\";\n\nexport default () => (\n  <nav className=\"header__nav\">\n    <Link to=\"/\">\n      <h1 className=\"nav__logo\">Stransfer</h1>\n    </Link>\n    <div className=\"collapsable-nav-list\">\n      <input type=\"checkbox\" id=\"collapse-nav\" hidden />\n      <label\n        aria-hidden=\"true\"\n        className=\"collapse-nav-list-btn\"\n        htmlFor=\"collapse-nav\"\n      >\n        <span /> <span /> <span />\n      </label>\n      <ul className=\"nav__nav-list\">\n        <li className=\"nav-list__nav-item\">\n          <Link to=\"/#about-section\">About Stransfer</Link>\n        </li>\n        <li className=\"nav-list__nav-item\">\n          <Link to=\"/app\">App</Link>\n        </li>\n        <li className=\"nav-list__nav-item\">\n          <Link to=\"/#about-us-section\">About Us</Link>\n        </li>\n        <li className=\"nav-list__nav-item\">\n          <a\n            href=\"https://github.com/DauteRR/StyleTransfer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Github\n          </a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);\n","import { IDimensions } from \"./dimensions\";\n\n// Buffer to store the images so we can\n// get their data URL\nconst canvasBuffer = document.createElement(\"canvas\");\n\n/**\n * Return a blob representing the given image or the current frame captured from\n * the given stream\n */\nexport function mediaToBlob(\n  media: HTMLVideoElement | HTMLImageElement,\n  { width, height }: IDimensions\n): Promise<Blob> {\n  canvasBuffer.width = width;\n  canvasBuffer.height = height;\n  const context = canvasBuffer.getContext(\"2d\");\n  if (!context) {\n    return Promise.reject();\n  }\n  context.drawImage(media, 0, 0, width, height);\n\n  return new Promise((res, rej) =>\n    canvasBuffer.toBlob(blob => (blob ? res(blob) : rej()))\n  );\n}\n\n/**\n * Assigns a media source to a media element (video or audio)\n */\nexport function loadStreamToMedia(\n  stream: MediaStream,\n  media: HTMLMediaElement\n): Promise<HTMLMediaElement> {\n  // Try to use srcObject. If it doesn't work\n  // fallback to use URL.createObjectURL()\n  try {\n    media.srcObject = stream;\n  } catch (_) {\n    media.src = URL.createObjectURL(stream);\n  } finally {\n    return new Promise(res =>\n      media.addEventListener(\"loadedmetadata\", () => res(media), { once: true })\n    );\n  }\n}\n\n/**\n * Stops all the media sources from the given stream\n */\nexport function unloadMediaStream(stream: MediaStream) {\n  [...stream.getTracks()].forEach(track => track.stop());\n}\n\n/**\n * Returns the relationship of the width to the height for the given media\n *\n * @param {HTMLVideoElement} media Media to get the width and height from\n */\nexport function getAspectRatio(media: HTMLVideoElement | HTMLImageElement) {\n  if (media instanceof HTMLVideoElement) {\n    return media.videoWidth / media.videoHeight;\n    // if (media.videoWidth > 0 && media.videoHeight > 0) {\n    // } else {\n    //   throw new Error(\n    //     `Invalid dimensions {videoWidth: ${media.videoWidth}, videoHeight: ${\n    //       media.videoHeight\n    //     }}. They must be numbers greater than 0`\n    //   );\n    // }\n  } else {\n    return media.width / media.height;\n  }\n}\n","export interface IDimensions {\n  width: number;\n  height: number;\n}\n\n/**\n * Video and images maximum dimensions. If we were to allow\n * arbitrary large video or images the app would be much slower.\n *\n * Also these needs to be square because ML5js styleTransfer needs\n * square images\n */\nexport const MAX_DIMENSIONS: IDimensions = { width: 300, height: 300 };\n\n/**\n * Returns whether the given dimensions are in the right bounds or not\n *\n * @param {Object} dimensions {width, height} Dimensions to check\n * @returns Whether the given dimensions are in the right bounds or not\n */\nexport function areCorrectDimensions(dimensions: IDimensions): boolean {\n  return (\n    dimensions.width > 0 &&\n    dimensions.width <= MAX_DIMENSIONS.width &&\n    dimensions.height > 0 &&\n    dimensions.height <= MAX_DIMENSIONS.height\n  );\n}\n\n/**\n * Returns the maximum dimensions respecting the given aspect ratio\n *\n * @param {Number} aspectRatio Width to height relationship that dimensions need to respect\n * @returns {IDimensions} Dimensions respecting the aspect ratio\n */\nexport function getMaxDimensionsRespectingAspectRatio(\n  aspectRatio: number\n): IDimensions {\n  const result = { ...MAX_DIMENSIONS };\n\n  // The dimensions will be the maximum allowed but respecting\n  // the aspect ratio given (else the media will look squeezed)\n  if (aspectRatio < 1) {\n    // The width needs to be <= than the height\n    result.width *= aspectRatio;\n  } else {\n    // The height needs to be <= than the width\n    result.height /= aspectRatio;\n  }\n\n  return result;\n}\n","import React, { Component } from \"react\";\nimport * as MediaUtils from \"../../utils/mediaUtils\";\nimport {\n  MAX_DIMENSIONS,\n  getMaxDimensionsRespectingAspectRatio\n} from \"../../utils/dimensions\";\nimport \"./Camera.scss\";\n\ninterface CameraProps {\n  onNewPhoto: (snapshotBlob: HTMLVideoElement) => void;\n}\n\ninterface CameraState {\n  stream: MediaStream | null;\n  isRecording: boolean;\n  errorMessage: string;\n}\n\nclass Camera extends Component<CameraProps, CameraState> {\n  state = {\n    stream: null,\n    isRecording: false,\n    errorMessage: \"\"\n  };\n\n  componentDidMount() {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: false })\n      .then(this._loadStream)\n      .catch(_ => {\n        this.setState({\n          isRecording: false,\n          errorMessage: \"Access to camera not granted\"\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    const { stream } = this.state;\n\n    if (stream) {\n      MediaUtils.unloadMediaStream(stream);\n    }\n  }\n\n  private _videoRef: HTMLVideoElement | null = null;\n\n  private _setVideoRef = (videoElement: HTMLVideoElement) =>\n    (this._videoRef = videoElement);\n\n  private _loadStream = async (stream: MediaStream) => {\n    if (this._videoRef) {\n      await MediaUtils.loadStreamToMedia(stream, this._videoRef);\n\n      this.setState({\n        stream,\n        isRecording: true,\n        errorMessage: \"\"\n      });\n    } else {\n      this.setState({\n        stream: null,\n        isRecording: false,\n        errorMessage:\n          \"Unable to get the video element. Must be a bug, this should never happen D:\"\n      });\n    }\n  };\n\n  private _takePhoto = async () => {\n    const video = this._videoRef;\n\n    if (!this.state.isRecording || !video) {\n      return Promise.reject();\n    }\n\n    this.props.onNewPhoto(video);\n  };\n\n  render() {\n    if (this.state.errorMessage) {\n      return (\n        <div className=\"camera-container\">\n          <p className=\"camera-container__error-message\">\n            {this.state.errorMessage}\n          </p>\n        </div>\n      );\n    }\n\n    // Max width and height\n    let displayDimensions = MAX_DIMENSIONS;\n\n    if (\n      this._videoRef &&\n      this._videoRef.videoWidth > 0 &&\n      this._videoRef.videoHeight > 0\n    ) {\n      // Have the max width and height respect the original\n      // aspect ratio to look good\n      const aspectRatio = MediaUtils.getAspectRatio(this._videoRef);\n      displayDimensions = getMaxDimensionsRespectingAspectRatio(aspectRatio);\n    }\n\n    return (\n      <div className=\"camera-container\">\n        <div className=\"camera-container__camera\">\n          <video\n            ref={this._setVideoRef}\n            autoPlay\n            width={MAX_DIMENSIONS.width}\n            height={MAX_DIMENSIONS.height}\n            role=\"application\"\n            aria-label=\"Camera\"\n            style={{\n              maxWidth: `${displayDimensions.width}px`,\n              maxHeight: `${displayDimensions.height}px`\n            }}\n          >\n            Cannot show the camera. Maybe it is because this browser doesn't\n            support the HTML5 \"video\" element\n          </video>\n        </div>\n        <button\n          className=\"camera-container__button\"\n          onClick={this._takePhoto}\n          aria-label=\"Take photo\"\n          title=\"Take photo\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Camera;\n","import React, { Component } from \"react\";\nimport \"./DownloadableImage.scss\";\n\ninterface DownloadableImageProps {\n  width: number;\n  height: number;\n  dataUrl: string;\n  alt: string;\n  imageName: string;\n  date: number;\n  deleteImage: Function;\n}\n\ninterface DownloadableImageState {\n  isImageLoaded: boolean;\n}\n\nclass DownloadableImage extends Component<\n  DownloadableImageProps,\n  DownloadableImageState\n> {\n  canvasRef = React.createRef<HTMLCanvasElement>();\n  imageRef = React.createRef<HTMLImageElement>();\n\n  state = {\n    isImageLoaded: false\n  };\n\n  getImageElement() {\n    const image = this.imageRef.current;\n\n    if (!image) throw new Error(\"Image reference error\");\n\n    return image;\n  }\n\n  getCanvasElement() {\n    const canvas = this.canvasRef.current;\n\n    if (!canvas) throw new Error(\"Canvas reference error\");\n\n    return canvas;\n  }\n\n  getDownloadButton() {\n    if (this.state.isImageLoaded) {\n      return (\n        <a download={this.props.imageName} href={this.props.dataUrl}>\n          <span\n            className=\"options__download-icon\"\n            title=\"Download\"\n            aria-label=\"Download\"\n          >\n            D\n          </span>\n        </a>\n      );\n    } else {\n      return <p>{`\"${this.props.imageName}\"`} not available yet</p>;\n    }\n  }\n\n  onImageLoad = () => {\n    const context = this.getCanvasElement().getContext(\"2d\");\n    if (context) {\n      context.drawImage(\n        this.getImageElement(),\n        0,\n        0,\n        this.props.width,\n        this.props.height\n      );\n      this.setState({ isImageLoaded: true });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"DownloadableImage\">\n        <div className=\"DownloadableImage__options\">\n          <button\n            onClick={() => this.props.deleteImage(this.props.date)}\n            className=\"options__delete-button\"\n            title=\"Delete\"\n            aria-label=\"Delete\"\n          >\n            &times;\n          </button>\n          {this.getDownloadButton()}\n        </div>\n        <canvas\n          width={this.props.width}\n          height={this.props.height}\n          ref={this.canvasRef}\n          hidden\n        />\n        <img\n          className=\"DownloadableImage__image\"\n          src={this.props.dataUrl}\n          alt={this.props.alt}\n          width={this.props.width}\n          height={this.props.height}\n          onLoad={this.onImageLoad}\n          ref={this.imageRef}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DownloadableImage;\n","import React, { Component } from \"react\";\nimport DownloadableImage from \"./DownloadableImage\";\nimport { IImageData } from \"../utils/IImageData\";\n\ninterface DownloadableImageListProps {\n  imageData: IImageData[];\n  deleteImage: Function;\n}\n\nclass DownloadableImageList extends Component<DownloadableImageListProps> {\n  createPhotoListItem = (\n    { blob, width, height, date }: IImageData,\n    index: number\n  ) => {\n    const dataUrl = URL.createObjectURL(blob);\n\n    return (\n      <li key={index} className=\"result-container\">\n        <DownloadableImage\n          dataUrl={dataUrl}\n          width={width}\n          height={height}\n          alt={String(index)}\n          imageName={String(index)}\n          date={date}\n          deleteImage={this.props.deleteImage}\n        />\n      </li>\n    );\n  };\n\n  render() {\n    return (\n      <ul\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\"\n        }}\n      >\n        {this.props.imageData.map(this.createPhotoListItem)}\n      </ul>\n    );\n  }\n}\n\nexport default DownloadableImageList;\n","import idb from \"idb\";\nimport { IImageData } from \"./IImageData\";\n\nconst APP_IDB_NAME = \"StyleTransfer\";\nconst APP_IDB_VERSION = 1;\nconst IMAGE_DATA_OBJECT_STORE_NAME = \"image_data\";\n\nconst idbPromise = idb.open(APP_IDB_NAME, APP_IDB_VERSION, upgradeIdb => {\n  upgradeIdb.createObjectStore(IMAGE_DATA_OBJECT_STORE_NAME, {\n    keyPath: \"date\"\n  });\n});\n\nexport function saveImageData(data: IImageData) {\n  return idbPromise.then(db =>\n    db\n      .transaction(IMAGE_DATA_OBJECT_STORE_NAME, \"readwrite\")\n      .objectStore(IMAGE_DATA_OBJECT_STORE_NAME)\n      .put(data)\n  );\n}\n\nexport function deleteImageData(key: number) {\n  return idbPromise.then(db =>\n    db\n      .transaction(IMAGE_DATA_OBJECT_STORE_NAME, \"readwrite\")\n      .objectStore(IMAGE_DATA_OBJECT_STORE_NAME)\n      .delete(key)\n  );\n}\n\nexport function getAllImageData() {\n  return idbPromise.then(db =>\n    db\n      .transaction(IMAGE_DATA_OBJECT_STORE_NAME, \"readonly\")\n      .objectStore(IMAGE_DATA_OBJECT_STORE_NAME)\n      .getAll()\n  );\n}\n","export interface IStyleInfo {\n  name: string;\n  pathToModel: string;\n  pathToImage: string;\n}\n\nconst styleInfos: IStyleInfo[] = [\n  {\n    name: \"Scream\",\n    pathToModel: \"models/scream\",\n    pathToImage: \"img/styles/Munch_TheScream_Wikipedia.jpg\"\n  },\n  {\n    name: \"The Wave\",\n    pathToModel: \"models/wave\",\n    pathToImage: \"img/styles/Wave_Hokusai_Wikipedia.jpg\"\n  },\n  {\n    name: \"Rain Princess\",\n    pathToModel: \"models/rain_princess\",\n    pathToImage: \"img/styles/RainPrincess_LeonidAfremov_Deviantart.jpg\"\n  },\n  {\n    name: \"Matrix\",\n    pathToModel: \"models/matrix\",\n    pathToImage: \"img/styles/Matrix_Pixabay_Comfreak.jpg\"\n  },\n  {\n    name: \"Starry Night\",\n    pathToModel: \"models/starry_night\",\n    pathToImage: \"img/styles/StarryNight_VanGogh_Wikipedia.jpg\"\n  },\n  {\n    name: \"Mosaic\",\n    pathToModel: \"models/mosaic\",\n    pathToImage: \"img/styles/mosaic.jpg\"\n  },\n  {\n    name: \"Dance 1987\",\n    pathToModel: \"models/dance_1987\",\n    pathToImage: \"img/styles/dance_1987.jpg\"\n  }\n\n];\n\nexport default styleInfos;\n","import React, { Component } from \"react\";\nimport Camera from \"../Camera\";\nimport DownloadableImageList from \"../DownloadableImageList\";\nimport * as IdbUtils from \"../../utils/indexedDatabase\";\nimport * as MediaUtils from \"../../utils/mediaUtils\";\nimport { MAX_DIMENSIONS } from \"../../utils/dimensions\";\nimport { IImageData } from \"../../utils/IImageData\";\nimport \"./App.scss\";\n\n//@ts-ignore\nimport ml5 from \"ml5\";\nimport styleInfos from \"../../utils/StyleInfos\";\nimport {\n  IDimensions,\n  getMaxDimensionsRespectingAspectRatio\n} from \"../../utils/dimensions\";\nimport { NEG_ONE } from \"long\";\n\ninterface Style {\n  transfer: (\n    video: HTMLMediaElement | HTMLImageElement\n  ) => Promise<HTMLImageElement>;\n}\n\ninterface AppState {\n  imageData: IImageData[];\n  selectedStyle: string;\n  styleTransfer: Style | null;\n  loadingStyle: boolean;\n}\n\nclass App extends Component<{}, AppState> {\n  state: AppState = {\n    imageData: [],\n    styleTransfer: null,\n    selectedStyle: \"None\",\n    loadingStyle: false\n  };\n\n  componentDidMount() {\n    IdbUtils.getAllImageData().then(imageDataList =>\n      this.setState({ imageData: imageDataList })\n    );\n  }\n\n  private _deleteImage = (key: number) => {\n    IdbUtils.deleteImageData(key);\n    this.setState(({ imageData }) => ({\n      imageData: imageData.filter(({ date }) => date !== key)\n    }));\n  };\n\n  private async _loadImage(\n    media: HTMLImageElement | HTMLVideoElement,\n    dimensions: IDimensions\n  ) {\n    const blob = await MediaUtils.mediaToBlob(media, dimensions);\n    const date = Date.now();\n    const newImageData = { date, blob, ...dimensions };\n\n    IdbUtils.saveImageData(newImageData);\n    this.setState(prevState => ({\n      imageData: [...prevState.imageData, newImageData]\n    }));\n  }\n\n  private _onNewPhoto = async (media: HTMLVideoElement | HTMLImageElement) => {\n    const cameraAspectRatio = MediaUtils.getAspectRatio(media);\n    const dimensions = getMaxDimensionsRespectingAspectRatio(cameraAspectRatio);\n\n    // Only on images because we know that the video will not change its\n    // dimensions. Images on the other hand are uploaded by the user, they can\n    // have any width & height\n    if (media instanceof HTMLImageElement) {\n      media.width = MAX_DIMENSIONS.width;\n      media.height = MAX_DIMENSIONS.height;\n    }\n\n    // No style transfer means simple photo\n    if (!this.state.styleTransfer) {\n      this._loadImage(media, dimensions);\n    } else {\n      const img = await this.state.styleTransfer.transfer(media);\n\n      // The image source may not be loaded, in that case we wait for the event\n      if (img.complete) {\n        this._loadImage(img, dimensions);\n      } else {\n        img.addEventListener(\n          \"load\",\n          this._loadImage.bind(this, img, dimensions),\n          { once: true }\n        );\n      }\n    }\n  };\n\n  private _onImageInputted = ({ target }: { target: HTMLInputElement }) => {\n    // Must be one and only one image inputted\n    if (!target.files || target.files.length !== 1) {\n      return;\n    }\n    const imgBlob = target.files[0];\n    const img = new Image();\n    const imgUrl = URL.createObjectURL(imgBlob);\n    img.src = imgUrl;\n    img.onload = async () => {\n      URL.revokeObjectURL(imgUrl);\n      this._onNewPhoto(img);\n    };\n    // Reset the input\n    target.value = \"\";\n  };\n\n  private _onStyleSelection = async (name: string, pathToModel: string) => {\n    this.setState({ loadingStyle: true });\n\n    const styleTransfer = await ml5.styleTransfer(pathToModel);\n\n    this.setState({\n      styleTransfer,\n      selectedStyle: name,\n      loadingStyle: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"centered\">\n        {this.state.loadingStyle && (\n          <div className=\"loading-style-info\">Loading Style</div>\n        )}\n        <h2>Select the style to apply</h2>\n        <ul className=\"style-list\">\n          <li>\n            <label\n              className={`style-list__style-option ${\n                this.state.selectedStyle === \"None\"\n                  ? \"style-list__style-option--selected\"\n                  : \"\"\n              }`}\n            >\n              <div className=\"style-option__img--none\" />\n              <button\n                className=\"style-option__btn\"\n                onClick={() =>\n                  this.setState({\n                    styleTransfer: null,\n                    selectedStyle: \"None\",\n                    loadingStyle: false\n                  })\n                }\n              >\n                None\n              </button>\n            </label>\n          </li>\n          {styleInfos.map(({ name, pathToImage, pathToModel }) => (\n            <li key={name}>\n              <label\n                className={`style-list__style-option ${\n                  this.state.selectedStyle === name\n                    ? \"style-list__style-option--selected\"\n                    : \"\"\n                }`}\n              >\n                <img\n                  className=\"style-option__img\"\n                  src={pathToImage}\n                  alt={`Image of the \"${name}\" style`}\n                />\n                <button\n                  className=\"style-option__btn\"\n                  onClick={() => this._onStyleSelection(name, pathToModel)}\n                  disabled={this.state.loadingStyle}\n                >\n                  {name}\n                </button>\n              </label>\n            </li>\n          ))}\n        </ul>\n        <h2>Take a picture or choose an image from your device</h2>\n        <section className=\"input-section\">\n          <Camera onNewPhoto={this._onNewPhoto} />\n          <label className=\"input-section__file-input\">\n            <input\n              disabled={this.state.loadingStyle}\n              type=\"file\"\n              accept=\"image/*\"\n              multiple={false}\n              onChange={this._onImageInputted}\n              style={{\n                display: \"none\"\n              }}\n            />\n            Open image from disk\n          </label>\n        </section>\n        <h2>Results</h2>\n        {this.state.imageData.length === 0 ? (\n          <p>No images available</p>\n        ) : (\n          <DownloadableImageList\n            imageData={this.state.imageData}\n            deleteImage={this._deleteImage}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport HomePage from \"./pages/Home\";\nimport AppPage from \"./pages/Application\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nconst Router = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/app\" component={AppPage} />\n      <Route component={() => <div>Error</div>} />\n    </Switch>\n  </BrowserRouter>\n);\n\nReactDOM.render(Router, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Nav from \"../../components/Navigation\";\nimport \"./LandingPage.scss\";\nimport MakingArtImg from \"./img/undraw_making_art_759c.svg\";\nimport UploadingImg from \"./img/undraw_image_upload_wqh3.svg\";\nimport SafeImg from \"./img/undraw_safe_bnk7.svg\";\nimport AiImg from \"./img/undraw_artificial_intelligence_upfn.svg\";\nimport CarlosImg from \"./img/carlos.png\";\nimport DauteImg from \"./img/daute.png\";\n\nexport default () => (\n  <Fragment>\n    <header className=\"header\">\n      <div className=\"container\">\n        <Nav />\n        <span aria-hidden=\"true\" className=\"header__down-arrow-container\">\n          <span className=\"down-arrow-container__arrow\">⌄</span>\n        </span>\n      </div>\n    </header>\n    <main>\n      <section id=\"about-section\" className=\"container section\">\n        <h2 className=\"centered-message\">What is Stransfer?</h2>\n        <p className=\"centered-message\">\n          Stransfer is a web application that lets you take pictures and apply a\n          style to them. It was made by students as part of a college project\n          using the{\" \"}\n          <a\n            className=\"inline-link\"\n            href=\"https://ml5js.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            ml5js\n          </a>{\" \"}\n          library.\n        </p>\n        <ul className=\"features\">\n          <li className=\"features__card\">\n            <p className=\"card__message\">\n              You can take photos within the app and apply astonishing styles to\n              them\n            </p>\n            <img\n              className=\"card_img\"\n              src={MakingArtImg}\n              alt=\"Cartoon person painting herself in a canvas with a different style\"\n            />\n          </li>\n          <li className=\"features__card\">\n            <p className=\"card__message\">\n              You can also upload images from your device\n            </p>\n            <img\n              className=\"card_img\"\n              src={UploadingImg}\n              alt=\"Cartoon person uploading physical files to a cardboard imitating the browser\"\n            />\n          </li>\n          <li className=\"features__card\">\n            <p className=\"card__message\">\n              And everything is done in your browser, your photos never leave\n              your device\n            </p>\n            <img\n              className=\"card_img\"\n              src={SafeImg}\n              alt=\"Cartoon image of three browser windows secured with a lock\"\n            />\n          </li>\n        </ul>\n      </section>\n      <section id=\"about-us-section\" className=\"container section\">\n        <h2 className=\"centered-message\">Who are we?</h2>\n        <ul className=\"our-information\">\n          <li className=\"our-information__info-container\">\n            <img\n              className=\"info-container__img\"\n              src={DauteImg}\n              alt=\"Image of co-author with the 'rain princess' style\"\n            />\n            <p className=\"info-container__info\">\n              My name is Daute and I enjoy creating useful and interesting\n              applications like this. You can find me{\" \"}\n              <a\n                className=\"inline-link\"\n                href=\"https://github.com/DauteRR\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                @DauteRR on Github\n              </a>\n            </p>\n          </li>\n          <li className=\"our-information__info-container\">\n            <img\n              className=\"info-container__img\"\n              src={CarlosImg}\n              alt=\"Image of co-author with the 'mosaic' style\"\n            />\n            <p className=\"info-container__info\">\n              I'm Carlos, I love Software Development and understanding the\n              interesting maths behind Artificial Intelligence techniques. You\n              can find me{\" \"}\n              <a\n                className=\"inline-link\"\n                href=\"https://github.com/carlosdg\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                @carlosdg on Github\n              </a>\n            </p>\n          </li>\n        </ul>\n        <p className=\"centered-message\">\n          We are students at{\" \"}\n          <a\n            className=\"inline-link\"\n            href=\"https://www.ull.es/en/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            ULL\n          </a>{\" \"}\n          where this app was born as part of a project for the{\" \"}\n          <q>Intelligent Systems</q> subject. We decided to do a web application\n          so anyone can enjoy it, hope you like it 😊\n        </p>\n      </section>\n      <section id=\"go-to-app-section\" className=\"container section\">\n        <Link className=\"go-to-app-link\" to=\"/app\">\n          Go to the application\n        </Link>\n        <p className=\"style-selection-caveats\">\n          But before using the app{\" \"}\n          <strong>\n            please read the following caveats that it has right now:\n          </strong>\n        </p>\n        <ul className=\"caveats-list\">\n          <li>\n            Once you click on a style it will be downloaded. They are about 17MB\n            each 😱 but after the first download they are stored in browser for\n            later use (including offline use)\n          </li>\n          <li>\n            The computation needed is considerably high and the app will freeze\n            or lag until the style is applied\n          </li>\n          <li>Doesn't work on Safari nor iOS 😔</li>\n          <li>\n            For performance reasons the style is not displayed on the camera in\n            real time\n          </li>\n          <li>\n            For performance reasons too the size of the photos is considerably\n            low\n          </li>\n        </ul>\n      </section>\n    </main>\n  </Fragment>\n);\n","import React, { Fragment } from \"react\";\nimport Nav from \"../../components/Navigation\";\nimport App from \"../../components/App\";\n\nexport default () => (\n  <Fragment>\n    <div\n      style={{ backgroundColor: \"#6c63ff\", boxShadow: \"2px 2px 10px #636cff\" }}\n    >\n      <div className=\"container\">\n        <Nav />\n      </div>\n    </div>\n    <div className=\"container\">\n      <App />\n    </div>\n  </Fragment>\n);\n"],"sourceRoot":""}